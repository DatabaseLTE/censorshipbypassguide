{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview This guide provides techniques for bypassing internet censorship imposed by institutions like governments, schools, or workplaces. It covers how proxies, VPNs, and other tools can help you access restricted information securely. The primary method involves using a proxy server as an intermediary. A proxy server connects you to blocked content while hiding your activity from the censoring authority. Many governments and institutions block popular VPNs and proxy services, so for more secure and reliable access, you might consider setting up your own proxy or VPN server. Disclaimer: We are not responsible for any damages that may occur while bypassing censorship. This guide is intended for educational purposes only.","title":"Home"},{"location":"#overview","text":"This guide provides techniques for bypassing internet censorship imposed by institutions like governments, schools, or workplaces. It covers how proxies, VPNs, and other tools can help you access restricted information securely. The primary method involves using a proxy server as an intermediary. A proxy server connects you to blocked content while hiding your activity from the censoring authority. Many governments and institutions block popular VPNs and proxy services, so for more secure and reliable access, you might consider setting up your own proxy or VPN server. Disclaimer: We are not responsible for any damages that may occur while bypassing censorship. This guide is intended for educational purposes only.","title":"Overview"},{"location":"misc/contacts/","text":"Contacts Discord: zenithrifle Proudly Supported By: FMHY","title":"Contacts"},{"location":"misc/contacts/#contacts","text":"Discord: zenithrifle Proudly Supported By: FMHY","title":"Contacts"},{"location":"misc/licence/","text":"Licence The licence is under: CC BY-NC 4.0","title":"Licence"},{"location":"misc/licence/#licence","text":"The licence is under: CC BY-NC 4.0","title":"Licence"},{"location":"server/Doge/","text":"Doge Unblocker What is Doge Unblocker? Doge Unblocker is an advanced and neatly implemented web proxy using Ultraviolent technology. Among the many web proxies, this is standing out in design as well as usability. What is a Web Proxy? The web proxy will enable you to visit various websites indirectly by redirecting your connection through a third-party server. While these web proxies are great to bypass restrictions in controlled environments, they support only web traffic. For more general use cases, for example, accessing desktop applications or creating virtual workspaces, consider using more general-purpose tools such as Kasm Workspaces . For simpler needs, a web proxy like Doge Unblocker will do the job. Downsides of Doge Unblocker Limited Functionality : Supports only accessing websites over this proxy server, not other protocols or applications. Performance Issues : Speed may be slow based on the server load and quality of connection. How to Set Up Doge Unblocker First, visit the repository of the Doge Unblocker in GitHub: Doge Unblocker GitHub Repository . You can then choose to be hosted by one of the four providers. Follow the instructions regarding the chosen hosting provider. Once the setup is complete, click on the given link and start using your proxy!","title":"Doge Unblocker"},{"location":"server/Doge/#doge-unblocker","text":"","title":"Doge Unblocker"},{"location":"server/Doge/#what-is-doge-unblocker","text":"Doge Unblocker is an advanced and neatly implemented web proxy using Ultraviolent technology. Among the many web proxies, this is standing out in design as well as usability.","title":"What is Doge Unblocker?"},{"location":"server/Doge/#what-is-a-web-proxy","text":"The web proxy will enable you to visit various websites indirectly by redirecting your connection through a third-party server. While these web proxies are great to bypass restrictions in controlled environments, they support only web traffic. For more general use cases, for example, accessing desktop applications or creating virtual workspaces, consider using more general-purpose tools such as Kasm Workspaces . For simpler needs, a web proxy like Doge Unblocker will do the job. Downsides of Doge Unblocker Limited Functionality : Supports only accessing websites over this proxy server, not other protocols or applications. Performance Issues : Speed may be slow based on the server load and quality of connection. How to Set Up Doge Unblocker First, visit the repository of the Doge Unblocker in GitHub: Doge Unblocker GitHub Repository . You can then choose to be hosted by one of the four providers. Follow the instructions regarding the chosen hosting provider. Once the setup is complete, click on the given link and start using your proxy!","title":"What is a Web Proxy?"},{"location":"server/Hysteria/","text":"Hysteria 2 What is Hysteria 2? Hysteria 2 is a professional proxy tool designed for ultra-fast, secure connections to the Internet. It features a QUIC transport protocol that offers better speed, reliability, and efficiency. Because it was designed with bypassing censorship in mind, it comes with UDP-based acceleration and flexible encryption , among other features that make it perfect for applications that require low latency and high performance, such as gaming and streaming, among other resource-intensive applications. Yet, Hysteria 2 manages to remain lightweight and easy to deploy, thus fitting both the novice and the expert. **Explaining Key Terms Term Definition Hysteria 2 Advanced modern proxy for high-speed, secure, and reliable internet connections. QUIC A next-generation transport protocol designed to accelerate and guarantee reliability in data transfer. Circumventing Censorship Allows accessing restricted content by bypassing various internet censorship mechanisms. UDP-based Acceleration Employs UDP for faster data transfers, surpassing traditional TCP-based systems. Flexible Encryption Adapts secure and private communications by allowing you to choose an encryption method that suits your needs. Low-latency Applications Applications that require minimal delay, such as online gaming or live streaming. High-performance Applications Applications that require high speed and reliability, including large file transfers or extensive streaming. Lightweight Indicates how Hysteria 2 uses fewer resources, allowing it to run smoothly on a variety of devices. Easy to Deploy Features an easy setup process that requires little time or technical expertise. Key Benefits Very Fast : Reaches high connection speeds using advanced acceleration methodologies. Ease of Deployment: Setup is easy and quick. QUIC-Based : It bases on QUIC, which provides great throughput and strong reliability. Lightweight: It is lightweight due to its careful optimization in minimizing resource usage. Featureful: It has features to fit various use cases with encryption and censorship bypass. Installing Hysteria 2 on a Debian-based VPS Requirements Linux VPS forwarded with port 443 Basic knowledge of the command line Root access A text editor Step 1: Become Root** Switch to the root user with the following command: sudo -s Step 2: Install Hysteria 2 Download and install Hysteria 2 with the following command: bash <(curl -fsSL https://get.hy2.sh/) Step 3: Request a Certificate Generate SSL/TLS certificates, which are used to ensure the security of communications: openssl req -x509 -nodes -newkey ec:<(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj \"/CN=https://pan.baidu.com\" -days 36500 && \\ sudo chown hysteria /etc/hysteria/server.key && \\ sudo chown hysteria /etc/hysteria/server.crt Step 4: Enable and Start Hysteria 2** Start the service: systemctl start hysteria-server.service Enable the service to start on boot: systemctl enable hysteria-server.service Step 5: Configure Hysteria** Create the configuration file: cat << EOF > /etc/hysteria/config.yaml listen: :443 tls: cert: /etc/hysteria/server.crt key: /etc/hysteria/server.key auth: type: password password: 123456 # Change this password masquerade: type: proxy proxy: url: https://pan.baidu.com # Replace with a suitable SNI-fake site rewriteHost: true EOF Note: Replace the password with a secure one. Step 6: Apply Configuration** Restart the Hysteria server to apply the configuration changes: systemctl restart hysteria-server.service You're All Done! Your Hysteria 2 server is up and running. Please follow the client configuration for your device to begin using the proxy service.","title":"Hysteria 2"},{"location":"server/Hysteria/#hysteria-2","text":"","title":"Hysteria 2"},{"location":"server/Hysteria/#what-is-hysteria-2","text":"Hysteria 2 is a professional proxy tool designed for ultra-fast, secure connections to the Internet. It features a QUIC transport protocol that offers better speed, reliability, and efficiency. Because it was designed with bypassing censorship in mind, it comes with UDP-based acceleration and flexible encryption , among other features that make it perfect for applications that require low latency and high performance, such as gaming and streaming, among other resource-intensive applications. Yet, Hysteria 2 manages to remain lightweight and easy to deploy, thus fitting both the novice and the expert. **Explaining Key Terms Term Definition Hysteria 2 Advanced modern proxy for high-speed, secure, and reliable internet connections. QUIC A next-generation transport protocol designed to accelerate and guarantee reliability in data transfer. Circumventing Censorship Allows accessing restricted content by bypassing various internet censorship mechanisms. UDP-based Acceleration Employs UDP for faster data transfers, surpassing traditional TCP-based systems. Flexible Encryption Adapts secure and private communications by allowing you to choose an encryption method that suits your needs. Low-latency Applications Applications that require minimal delay, such as online gaming or live streaming. High-performance Applications Applications that require high speed and reliability, including large file transfers or extensive streaming. Lightweight Indicates how Hysteria 2 uses fewer resources, allowing it to run smoothly on a variety of devices. Easy to Deploy Features an easy setup process that requires little time or technical expertise.","title":"What is Hysteria 2?"},{"location":"server/Hysteria/#key-benefits","text":"Very Fast : Reaches high connection speeds using advanced acceleration methodologies. Ease of Deployment: Setup is easy and quick. QUIC-Based : It bases on QUIC, which provides great throughput and strong reliability. Lightweight: It is lightweight due to its careful optimization in minimizing resource usage. Featureful: It has features to fit various use cases with encryption and censorship bypass.","title":"Key Benefits"},{"location":"server/Hysteria/#installing-hysteria-2-on-a-debian-based-vps","text":"","title":"Installing Hysteria 2 on a Debian-based VPS"},{"location":"server/Hysteria/#requirements","text":"Linux VPS forwarded with port 443 Basic knowledge of the command line Root access A text editor","title":"Requirements"},{"location":"server/Hysteria/#step-1-become-root","text":"Switch to the root user with the following command: sudo -s","title":"Step 1: Become Root**"},{"location":"server/Hysteria/#step-2-install-hysteria-2","text":"Download and install Hysteria 2 with the following command: bash <(curl -fsSL https://get.hy2.sh/)","title":"Step 2: Install Hysteria 2"},{"location":"server/Hysteria/#step-3-request-a-certificate","text":"Generate SSL/TLS certificates, which are used to ensure the security of communications: openssl req -x509 -nodes -newkey ec:<(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj \"/CN=https://pan.baidu.com\" -days 36500 && \\ sudo chown hysteria /etc/hysteria/server.key && \\ sudo chown hysteria /etc/hysteria/server.crt","title":"Step 3: Request a Certificate"},{"location":"server/Hysteria/#step-4-enable-and-start-hysteria-2","text":"Start the service: systemctl start hysteria-server.service Enable the service to start on boot: systemctl enable hysteria-server.service","title":"Step 4: Enable and Start Hysteria 2**"},{"location":"server/Hysteria/#step-5-configure-hysteria","text":"Create the configuration file: cat << EOF > /etc/hysteria/config.yaml listen: :443 tls: cert: /etc/hysteria/server.crt key: /etc/hysteria/server.key auth: type: password password: 123456 # Change this password masquerade: type: proxy proxy: url: https://pan.baidu.com # Replace with a suitable SNI-fake site rewriteHost: true EOF Note: Replace the password with a secure one.","title":"Step 5: Configure Hysteria**"},{"location":"server/Hysteria/#step-6-apply-configuration","text":"Restart the Hysteria server to apply the configuration changes: systemctl restart hysteria-server.service","title":"Step 6: Apply Configuration**"},{"location":"server/Hysteria/#youre-all-done","text":"Your Hysteria 2 server is up and running. Please follow the client configuration for your device to begin using the proxy service.","title":"You're All Done!"},{"location":"server/Kasm/","text":"Kasm Workspaces What is Kasm Workspaces? Kasm Workspaces is a containerized desktop and application streaming platform designed for secure remote access. It uses Docker containers to provide isolated, browser-based environments for applications, desktops, and development tools. Kasm is highly scalable, customizable, and ideal for use cases such as: Remote work Software development Cybersecurity With robust security and high performance, it is an excellent solution for organizations and individuals seeking secure, remote access to computing resources. Key Terms Explained Term Definition Kasm Workspaces A platform for securely streaming desktops and applications via a web browser. Containerized Running applications in isolated, lightweight environments (containers) for consistency and security. Streaming Delivering applications or desktops over the internet without requiring downloads or installations. Platform A system or environment where software or applications are built and run. Docker A tool for creating and managing containers to deploy software. Browser-based Accessible through a web browser without additional software installation. Scalable Able to handle increased workloads by adding resources without performance loss. Customizable Configurable to meet specific needs or preferences. Remote Work Performing work outside a traditional office environment, enabled by online tools. Cybersecurity Protecting systems, networks, and data from digital threats. How Can Kasm Help Bypass Censorship? By setting up Kasm Workspaces on a remote Virtual Private Server (VPS), users can bypass censorship effectively. Kasm provides encrypted, browser-based access to applications, making it difficult for censors to track your activities. Unlike standard web proxies, Kasm enables access to full tools such as Visual Studio Code or a terminal remotely. Advantages : Encryption : Secure and private communication. Versatility : Remote access to full applications and development tools. Stealth : Activities appear as regular web browsing to observers. Limitations : No GPU Acceleration : Kasm doesn't support GPU-intensive tasks. Limited Graphics Performance : Pre-rendered graphics on the server can result in slow performance, making it unsuitable for streaming videos or gaming. Kasm Workspaces Setup Prerequisites: A domain name A Linux VPS with port 443 forwarded Basic command-line skills Root access Step 1: Become Root Run the following command to switch to the root user: sudo -s Step 2: Install Kasm Workspaces Execute this command to download and install Kasm: cd /tmp && curl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.13.1.421524.tar.gz && tar -xf kasm_release_1.13.1.421524.tar.gz && bash kasm_release/install.sh During the installation, you will need to agree to the End User License Agreement (EULA). After installation, Kasm will provide credentials such as the admin username and password. Save this information in a secure location. Step 3: Verify Installation Visit your server's IP address in a browser using HTTPS. For example: https://<your-server-ip> You should see a warning screen about an untrusted certificate. Proceed to the site. Step 4: Configure SSL with Let\u2019s Encrypt Stop Kasm : bash /opt/kasm/bin/stop Install Let\u2019s Encrypt : (Assumes you're using a Debian-based distribution) bash apt -y install letsencrypt && cd /opt/kasm/current/certs Obtain an SSL Certificate : Replace example.com with your domain name: bash certbot certonly --standalone --agree-tos --preferred-challenges http -d example.com Backup Existing Certificates : bash mv kasm_nginx.crt kasm_nginx.crt.bk && mv kasm_nginx.key kasm_nginx.key.bk Set Up Symlinks for Certificates : bash ln -s /etc/letsencrypt/live/example.com/privkey.pem kasm_nginx.key ln -s /etc/letsencrypt/live/example.com/fullchain.pem kasm_nginx.crt Restart Kasm : bash /opt/kasm/bin/start Step 5: Access Kasm Workspaces Go to your domain name in a browser and log in using the credentials provided during installation. Your Kasm Workspaces environment is now ready to use!","title":"Kasm Workspaces"},{"location":"server/Kasm/#kasm-workspaces","text":"","title":"Kasm Workspaces"},{"location":"server/Kasm/#what-is-kasm-workspaces","text":"Kasm Workspaces is a containerized desktop and application streaming platform designed for secure remote access. It uses Docker containers to provide isolated, browser-based environments for applications, desktops, and development tools. Kasm is highly scalable, customizable, and ideal for use cases such as: Remote work Software development Cybersecurity With robust security and high performance, it is an excellent solution for organizations and individuals seeking secure, remote access to computing resources.","title":"What is Kasm Workspaces?"},{"location":"server/Kasm/#key-terms-explained","text":"Term Definition Kasm Workspaces A platform for securely streaming desktops and applications via a web browser. Containerized Running applications in isolated, lightweight environments (containers) for consistency and security. Streaming Delivering applications or desktops over the internet without requiring downloads or installations. Platform A system or environment where software or applications are built and run. Docker A tool for creating and managing containers to deploy software. Browser-based Accessible through a web browser without additional software installation. Scalable Able to handle increased workloads by adding resources without performance loss. Customizable Configurable to meet specific needs or preferences. Remote Work Performing work outside a traditional office environment, enabled by online tools. Cybersecurity Protecting systems, networks, and data from digital threats.","title":"Key Terms Explained"},{"location":"server/Kasm/#how-can-kasm-help-bypass-censorship","text":"By setting up Kasm Workspaces on a remote Virtual Private Server (VPS), users can bypass censorship effectively. Kasm provides encrypted, browser-based access to applications, making it difficult for censors to track your activities. Unlike standard web proxies, Kasm enables access to full tools such as Visual Studio Code or a terminal remotely.","title":"How Can Kasm Help Bypass Censorship?"},{"location":"server/Kasm/#advantages","text":"Encryption : Secure and private communication. Versatility : Remote access to full applications and development tools. Stealth : Activities appear as regular web browsing to observers.","title":"Advantages:"},{"location":"server/Kasm/#limitations","text":"No GPU Acceleration : Kasm doesn't support GPU-intensive tasks. Limited Graphics Performance : Pre-rendered graphics on the server can result in slow performance, making it unsuitable for streaming videos or gaming.","title":"Limitations:"},{"location":"server/Kasm/#kasm-workspaces-setup","text":"","title":"Kasm Workspaces Setup"},{"location":"server/Kasm/#prerequisites","text":"A domain name A Linux VPS with port 443 forwarded Basic command-line skills Root access","title":"Prerequisites:"},{"location":"server/Kasm/#step-1-become-root","text":"Run the following command to switch to the root user: sudo -s","title":"Step 1: Become Root"},{"location":"server/Kasm/#step-2-install-kasm-workspaces","text":"Execute this command to download and install Kasm: cd /tmp && curl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.13.1.421524.tar.gz && tar -xf kasm_release_1.13.1.421524.tar.gz && bash kasm_release/install.sh During the installation, you will need to agree to the End User License Agreement (EULA). After installation, Kasm will provide credentials such as the admin username and password. Save this information in a secure location.","title":"Step 2: Install Kasm Workspaces"},{"location":"server/Kasm/#step-3-verify-installation","text":"Visit your server's IP address in a browser using HTTPS. For example: https://<your-server-ip> You should see a warning screen about an untrusted certificate. Proceed to the site.","title":"Step 3: Verify Installation"},{"location":"server/Kasm/#step-4-configure-ssl-with-lets-encrypt","text":"Stop Kasm : bash /opt/kasm/bin/stop Install Let\u2019s Encrypt : (Assumes you're using a Debian-based distribution) bash apt -y install letsencrypt && cd /opt/kasm/current/certs Obtain an SSL Certificate : Replace example.com with your domain name: bash certbot certonly --standalone --agree-tos --preferred-challenges http -d example.com Backup Existing Certificates : bash mv kasm_nginx.crt kasm_nginx.crt.bk && mv kasm_nginx.key kasm_nginx.key.bk Set Up Symlinks for Certificates : bash ln -s /etc/letsencrypt/live/example.com/privkey.pem kasm_nginx.key ln -s /etc/letsencrypt/live/example.com/fullchain.pem kasm_nginx.crt Restart Kasm : bash /opt/kasm/bin/start","title":"Step 4: Configure SSL with Let\u2019s Encrypt"},{"location":"server/Kasm/#step-5-access-kasm-workspaces","text":"Go to your domain name in a browser and log in using the credentials provided during installation. Your Kasm Workspaces environment is now ready to use!","title":"Step 5: Access Kasm Workspaces"},{"location":"server/Local/","text":"Kasm Workspaces What is Kasm Workspaces? Kasm Workspaces is a containerized desktop and application streaming platform designed for secure remote access. It utilizes Docker containers to provide isolated, browser-based environments for applications, desktops, and development tools. Highly scalable and customizable, Kasm finds ideal applications in cases such as: Remote work Software development Cybersecurity With a robust security framework and a high-performance model, it is a perfect solution for any organization or entity that would want to safely and remotely access computing resources. **Key Terms Explained Term Definition Kasm Workspaces A platform for the secure streaming of a desktop and/or application via web browser. Containerized Run applications in isolated, light operating system virtualizations (containers) for consistency and security. Streaming Applications or desktops delivered over the internet (via a browser) with no downloads or installs. Platform An environment or system in which software or applications are created and executed. Docker Tool used to build and manage containers so that software is deployed in a straightforward way. Web-based Accessible within a browser; no software download is required. Scalable Can handle increased loads by scaling resources without performance loss. Customizable Configurable to suit particular needs or preferences. Remote Work The ability to work outside of an office environment due to enabling online tools. Cybersecurity Protection for systems, networks, and data from digital threats. How Can Kasm Help Bypass Censorship? Users can evade any such censorship by creating a Kasm Workspace on a remote Virtual Private Server (VPS). Kasm provides access to the applications you will be using over a browser via encryption; as such, it will be very challenging for censors to determine what you are doing. Unlike typical web proxies, Kasm allows users to interact with full tooling remotely, such as Visual Studio Code or a terminal. Advantages: Encryption: Secure and private communication. Versatility: Remote access to full applications and development tools. Stealth: Activities appear as regular web browsing to observers. Limitations No GPU Acceleration: Kasm does not support GPU-intensive tasks unless properly configured. Limited graphics performance: If pre-rendered on the server, graphics can show slow performance; hence, it is not a recommended use for video streaming or gaming. Prerequisites \u2022 A domain name; \u2022 A Linux VPS with port 443 forwarded; \u2022 Basic command-line skills; \u2022 Root access. Step 1: Become Root Switch to the root user with the following command: sudo -s Step 2: Install Kasm Workspaces At this point, download and install Kasm with this command: cd /tmp && curl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.13.1.421524.tar.gz && tar -xf kasm_release_1.13.1.421524.tar.gz && bash kasm_release/install.sh You will be asked to accept the EULA during the installation. After installation is complete, Kasm will provide you with credentials; for example, the admin username and password. You should save this in a secure location. Step 3: Verify Installation Using a browser navigate to HTTPS your server's IP address. For example: https://<your-server-ip> You should see an untrusted certificate warning screen. Click through to the site. Step 4: Configure SSL with Let's Encrypt Stop Kasm: bash /opt/kasm/bin/stop Install Let's Encrypt: (Assuming you are running a Debian-based distribution) bash apt -y install letsencrypt && cd /opt/kasm/current/certs ``` Create an SSL Certificate: Change out example.com with your domain name: bash certbot certonly --standalone --agree-tos --preferred-challenges http -d example.com Backup Old Certs: bash mv kasm_nginx.crt kasm_nginx.crt.bk && mv kasm_nginx.key kasm_nginx.key.bk Create Symlinks to Certs: ln -s /etc/letsencrypt/live/example.com/privkey.pem kasm_nginx.key ln -s /etc/letsencrypt/live/example.com/fullchain.pem kasm_nginx.crt Restart Kasm: bash /opt/kasm/bin/start Step 5: Access Kasm Workspaces Open your domain name in a browser. Log in with the credentials from the installer. Congratulations, your Kasm Workspaces environment is now ready to go!","title":"Local Bypass"},{"location":"server/Local/#what-is-kasm-workspaces","text":"Kasm Workspaces is a containerized desktop and application streaming platform designed for secure remote access. It utilizes Docker containers to provide isolated, browser-based environments for applications, desktops, and development tools. Highly scalable and customizable, Kasm finds ideal applications in cases such as: Remote work Software development Cybersecurity With a robust security framework and a high-performance model, it is a perfect solution for any organization or entity that would want to safely and remotely access computing resources.","title":"What is Kasm Workspaces?"},{"location":"server/Local/#key-terms-explained","text":"Term Definition Kasm Workspaces A platform for the secure streaming of a desktop and/or application via web browser. Containerized Run applications in isolated, light operating system virtualizations (containers) for consistency and security. Streaming Applications or desktops delivered over the internet (via a browser) with no downloads or installs. Platform An environment or system in which software or applications are created and executed. Docker Tool used to build and manage containers so that software is deployed in a straightforward way. Web-based Accessible within a browser; no software download is required. Scalable Can handle increased loads by scaling resources without performance loss. Customizable Configurable to suit particular needs or preferences. Remote Work The ability to work outside of an office environment due to enabling online tools. Cybersecurity Protection for systems, networks, and data from digital threats.","title":"**Key Terms Explained"},{"location":"server/Local/#how-can-kasm-help-bypass-censorship","text":"Users can evade any such censorship by creating a Kasm Workspace on a remote Virtual Private Server (VPS). Kasm provides access to the applications you will be using over a browser via encryption; as such, it will be very challenging for censors to determine what you are doing. Unlike typical web proxies, Kasm allows users to interact with full tooling remotely, such as Visual Studio Code or a terminal.","title":"How Can Kasm Help Bypass Censorship?"},{"location":"server/Local/#advantages","text":"Encryption: Secure and private communication. Versatility: Remote access to full applications and development tools. Stealth: Activities appear as regular web browsing to observers.","title":"Advantages:"},{"location":"server/Local/#limitations","text":"No GPU Acceleration: Kasm does not support GPU-intensive tasks unless properly configured. Limited graphics performance: If pre-rendered on the server, graphics can show slow performance; hence, it is not a recommended use for video streaming or gaming. Prerequisites \u2022 A domain name; \u2022 A Linux VPS with port 443 forwarded; \u2022 Basic command-line skills; \u2022 Root access. Step 1: Become Root Switch to the root user with the following command: sudo -s","title":"Limitations"},{"location":"server/Local/#step-2-install-kasm-workspaces","text":"At this point, download and install Kasm with this command: cd /tmp && curl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.13.1.421524.tar.gz && tar -xf kasm_release_1.13.1.421524.tar.gz && bash kasm_release/install.sh You will be asked to accept the EULA during the installation. After installation is complete, Kasm will provide you with credentials; for example, the admin username and password. You should save this in a secure location.","title":"Step 2: Install Kasm Workspaces"},{"location":"server/Local/#step-3-verify-installation","text":"Using a browser navigate to HTTPS your server's IP address. For example: https://<your-server-ip> You should see an untrusted certificate warning screen. Click through to the site.","title":"Step 3: Verify Installation"},{"location":"server/Local/#step-4-configure-ssl-with-lets-encrypt","text":"Stop Kasm: bash /opt/kasm/bin/stop Install Let's Encrypt: (Assuming you are running a Debian-based distribution) bash apt -y install letsencrypt && cd /opt/kasm/current/certs ``` Create an SSL Certificate: Change out example.com with your domain name: bash certbot certonly --standalone --agree-tos --preferred-challenges http -d example.com Backup Old Certs: bash mv kasm_nginx.crt kasm_nginx.crt.bk && mv kasm_nginx.key kasm_nginx.key.bk Create Symlinks to Certs: ln -s /etc/letsencrypt/live/example.com/privkey.pem kasm_nginx.key ln -s /etc/letsencrypt/live/example.com/fullchain.pem kasm_nginx.crt Restart Kasm: bash /opt/kasm/bin/start","title":"Step 4: Configure SSL with Let's Encrypt"},{"location":"server/Local/#step-5-access-kasm-workspaces","text":"Open your domain name in a browser. Log in with the credentials from the installer. Congratulations, your Kasm Workspaces environment is now ready to go!","title":"Step 5: Access Kasm Workspaces"},{"location":"server/V2ray/","text":"V2Ray What is V2Ray? V2Ray is a very powerful and privacy-enhancing proxy tool. It supports multiple protocols, can bypass the censorship of many countries, and traffic is fully encrypted, securing your internet use without restrictions. Note : V2Ray itself is only a protocol framework but is not a provider of servers. You may want to either set up your server or subscribe to one, often referred to as \"\u673a\u573a\" in Chinese . Common Protocols: VLESS : Lightweight and generally better for servers. VMESS : can be configured with advanced features to bypass highly strict censorship. The most popular config is: VLESS + CDN + WS + TLS . Terms Explanation Term Meaning VLESS A protocol used in V2Ray configurations. WS WebSocket, an upgraded HTTP protocol supporting real-time data syncing. TLS Encrypts data to not be visible to firewalls. CDN Content Delivery Network; puts content closer to users for speed and makes blocking servers much more difficult. Setup: VLESS + CDN + WS + TLS Requirements A domain name with cloudflare A Linux VPS with port forwarding for 443 and a random port (Other web hosting services like Render or Koyeb will also do; they provide a domain and CDN in most cases.) Basic command line skills Root Install X-UI To install x-ui , execute the following in a terminal: bash <(curl -Ls https://raw.githubusercontent.com/NidukaAkalanka/x-ui-english/master/install.sh) To install, just follow on-screen instructions. Make sure you enable system startup . Disable Firewall If you're using a Debian-based distro: If ufw is not installed, install it: sudo apt install ufw Disable the firewall: sudo ufw disable Access X-UI Panel Open your browser and access the: http://<server-ip>:<port-you-set> Log in with your credentials. Configure VLESS Endpoint Tap \"Inbounds\". Click the \"+\" button to create a new inbound. Settings as below: Remark: VLESS Protocol: vless Listening IP: (Leave Blank) Port: 443 Total Traffic (GB): (Leave Blank) Expiry Date: (Leave Blank) Disable Insecure Encryption: False Transmission: ws Accept Proxy Protocol: False Path: keep default TLS: False Sniffing: True Click \"Add To\" to save. Forward Port 443 Go to the control panel or router of your VPS. forward port 443 . Configure Cloudflare Activate your domain in Cloudflare if you don't already have it. Set an A Record pointing to your VPS IP. Make sure to turn on proxy. Go to SSL/TLS on Cloudflare: Switch to Full but do not enable Full Strict . You're Done! Now you can configure your V2Ray client. Hint: Check the documentation of your client or online for configuration.","title":"V2ray"},{"location":"server/V2ray/#v2ray","text":"","title":"V2Ray"},{"location":"server/V2ray/#what-is-v2ray","text":"V2Ray is a very powerful and privacy-enhancing proxy tool. It supports multiple protocols, can bypass the censorship of many countries, and traffic is fully encrypted, securing your internet use without restrictions. Note : V2Ray itself is only a protocol framework but is not a provider of servers. You may want to either set up your server or subscribe to one, often referred to as \"\u673a\u573a\" in Chinese .","title":"What is V2Ray?"},{"location":"server/V2ray/#common-protocols","text":"VLESS : Lightweight and generally better for servers. VMESS : can be configured with advanced features to bypass highly strict censorship. The most popular config is: VLESS + CDN + WS + TLS .","title":"Common Protocols:"},{"location":"server/V2ray/#terms-explanation","text":"Term Meaning VLESS A protocol used in V2Ray configurations. WS WebSocket, an upgraded HTTP protocol supporting real-time data syncing. TLS Encrypts data to not be visible to firewalls. CDN Content Delivery Network; puts content closer to users for speed and makes blocking servers much more difficult.","title":"Terms Explanation"},{"location":"server/V2ray/#setup-vless-cdn-ws-tls","text":"","title":"Setup: VLESS + CDN + WS + TLS"},{"location":"server/V2ray/#requirements","text":"A domain name with cloudflare A Linux VPS with port forwarding for 443 and a random port (Other web hosting services like Render or Koyeb will also do; they provide a domain and CDN in most cases.) Basic command line skills Root","title":"Requirements"},{"location":"server/V2ray/#install-x-ui","text":"To install x-ui , execute the following in a terminal: bash <(curl -Ls https://raw.githubusercontent.com/NidukaAkalanka/x-ui-english/master/install.sh) To install, just follow on-screen instructions. Make sure you enable system startup .","title":"Install X-UI"},{"location":"server/V2ray/#disable-firewall","text":"If you're using a Debian-based distro: If ufw is not installed, install it: sudo apt install ufw Disable the firewall: sudo ufw disable","title":"Disable Firewall"},{"location":"server/V2ray/#access-x-ui-panel","text":"Open your browser and access the: http://<server-ip>:<port-you-set> Log in with your credentials.","title":"Access X-UI Panel"},{"location":"server/V2ray/#configure-vless-endpoint","text":"Tap \"Inbounds\". Click the \"+\" button to create a new inbound. Settings as below: Remark: VLESS Protocol: vless Listening IP: (Leave Blank) Port: 443 Total Traffic (GB): (Leave Blank) Expiry Date: (Leave Blank) Disable Insecure Encryption: False Transmission: ws Accept Proxy Protocol: False Path: keep default TLS: False Sniffing: True Click \"Add To\" to save.","title":"Configure VLESS Endpoint"},{"location":"server/V2ray/#forward-port-443","text":"Go to the control panel or router of your VPS. forward port 443 .","title":"Forward Port 443"},{"location":"server/V2ray/#configure-cloudflare","text":"Activate your domain in Cloudflare if you don't already have it. Set an A Record pointing to your VPS IP. Make sure to turn on proxy. Go to SSL/TLS on Cloudflare: Switch to Full but do not enable Full Strict .","title":"Configure Cloudflare"},{"location":"server/V2ray/#youre-done","text":"Now you can configure your V2Ray client. Hint: Check the documentation of your client or online for configuration.","title":"You're Done!"},{"location":"server/VPN/","text":"VPN Servers In most cases, a VPN server is sufficient to bypass censorship. Since VPN servers are easily blocked, using a stealth VPN like OpenVPN over TCP port 443 will make it harder for them to detect. Actually, this works quite well at schools or offices. The good thing about Proton VPN is that it stands out because it doesn't have a data cap or bandwidth limit, and it uses both WireGuard and OpenVPN protocols. Generally, building your VPN server is not advisable, as in addition to its complexity, doing so introduces some level of risks. If Proton VPN or other providers are not effective for you, then consider methods that are alternative options.","title":"VPN"},{"location":"server/trojan/","text":"Trojan What is Trojan? Trojan is a powerful proxy tool designed to ensure secure, censorship-resistant communication. By mimicking HTTPS traffic, it becomes difficult for systems like the Great Firewall (GFW) to detect or block, offering private, unrestricted internet access for users. Key Terms Term Definition Trojan A proxy tool that provides secure and censorship-resistant communication. Proxy Tool Software that intermediates between a client and a server, often used for anonymity or bypassing restrictions. Secure Communication Methods of exchanging data that prevent unauthorized access or interception. Censorship-Resistant Designed to bypass internet censorship and provide unrestricted access to content. Mimics HTTPS Traffic Imitates secure web traffic to appear as standard HTTPS, avoiding detection by censorship systems. GFW (Great Firewall) A colloquial term referring to China's internet censorship and surveillance system. Detect and Block The process used by systems like the GFW to identify and restrict specific network traffic. Private Internet Access Secure, anonymous browsing that protects user identity and data online. Unrestricted Internet Access The ability to browse and access content online without censorship or limitations. Setting Up Trojan A step-by-step setup guide is coming soon. Stay tuned!","title":"Trojan"},{"location":"server/trojan/#trojan","text":"","title":"Trojan"},{"location":"server/trojan/#what-is-trojan","text":"Trojan is a powerful proxy tool designed to ensure secure, censorship-resistant communication. By mimicking HTTPS traffic, it becomes difficult for systems like the Great Firewall (GFW) to detect or block, offering private, unrestricted internet access for users.","title":"What is Trojan?"},{"location":"server/trojan/#key-terms","text":"Term Definition Trojan A proxy tool that provides secure and censorship-resistant communication. Proxy Tool Software that intermediates between a client and a server, often used for anonymity or bypassing restrictions. Secure Communication Methods of exchanging data that prevent unauthorized access or interception. Censorship-Resistant Designed to bypass internet censorship and provide unrestricted access to content. Mimics HTTPS Traffic Imitates secure web traffic to appear as standard HTTPS, avoiding detection by censorship systems. GFW (Great Firewall) A colloquial term referring to China's internet censorship and surveillance system. Detect and Block The process used by systems like the GFW to identify and restrict specific network traffic. Private Internet Access Secure, anonymous browsing that protects user identity and data online. Unrestricted Internet Access The ability to browse and access content online without censorship or limitations.","title":"Key Terms"},{"location":"server/trojan/#setting-up-trojan","text":"A step-by-step setup guide is coming soon. Stay tuned!","title":"Setting Up Trojan"},{"location":"support/Support/","text":"Support Please use the github issues for support: Link .","title":"Support"},{"location":"support/Support/#support","text":"Please use the github issues for support: Link .","title":"Support"}]}